apiVersion: v2
name: proxmox-exporter
type: application
version: 1.1.5
appVersion: "3.5.5"
dependencies:
  - name: base
    repository: https://charts.jhofer.org
    tags:
      - base
    version: 1.x.x
maintainers:
  - name: ojsef39
    email: me@jhofer.de
    url: https://github.com/ojsef39
description: |
  A Helm chart for Prometheus Proxmox VE Exporter

  ## Installation

  Create a secret with your Proxmox VE credentials:

  ```bash
  # Create the pve.yml file with your credentials
  cat > pve.yml << EOF
  default:
      user: prometheus@pve
      password: sEcr3T!
      verify_ssl: true

  # For multiple hosts with different credentials
  pve1:
      user: prometheus@pve
      token_name: "your-token-id-1"
      token_value: "your-token-value-1"
      verify_ssl: true

  pve2:
      user: prometheus@pve
      token_name: "your-token-id-2"
      token_value: "your-token-value-2"
      verify_ssl: true
  EOF

  # Create the Kubernetes secret
  kubectl create secret generic proxmox-credentials \
    --from-file=pve.yml=./pve.yml -n your-namespace
  ```

  ## Configuration

  ### Monitoring Multiple Proxmox Hosts

  To monitor multiple Proxmox hosts, configure the ServiceMonitor with multiple targets:

  ```yaml
  serviceMonitor:
    enabled: true
    extraLabels:
      release: prometheus
    targets:
      - name: pve1
        url: 192.168.1.2
        additionalMetricsRelabels:
          datacenter: dc1
      - name: pve2
        url: 192.168.1.3
        additionalMetricsRelabels:
          datacenter: dc2
  ```

  ### External Secret Configuration

  The chart expects an external secret containing the Proxmox credentials. Configure the secret reference:

  ```yaml
  secretRef:
    name: "proxmox-credentials"
    key: "pve.yml"
  ```

  The content of the secret should be in the format described in the Prometheus PVE Exporter documentation. For multiple hosts, configure your pve.yml with different modules:

  ```yaml
  default:
    user: prometheus@pve
    password: sEcr3T!
    verify_ssl: true

  pve1:
    user: prometheus@pve
    token_name: "your-token-id-1"
    token_value: "your-token-value-1"
    verify_ssl: true

  pve2:
    user: prometheus@pve
    token_name: "your-token-id-2"
    token_value: "your-token-value-2"
    verify_ssl: true
  ```

  Then, in your ServiceMonitor configuration, specify which module to use for each target:

  ```yaml
  serviceMonitor:
    enabled: true
    module: default # Default module
    targets:
      - name: pve1
        url: 192.168.1.2
      - name: pve2
        url: 192.168.1.3
        # Override default module
        additionalMetricsRelabels:
          module: pve2
  ```

  ## Examples

  ### Basic installation with two Proxmox hosts

  ```yaml
  # values.yaml
  secretRef:
    name: "proxmox-credentials"
    key: "pve.yml"

  serviceMonitor:
    enabled: true
    extraLabels:
      release: prometheus
    targets:
      - name: pve1
        url: 192.168.1.2
      - name: pve2
        url: 192.168.1.3
  ```

  ### Disabling specific collectors for large deployments

  ```yaml
  # values.yaml
  extraArgs:
    - "--no-collector.config"
  ```

  ## Schema

  For now it only has a simple schema generated with:

  ```bash
  helm schema . --no-dependencies -k additionalProperties -k required
  ```
